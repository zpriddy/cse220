//**************************************************************************************************************
// CLASS: cOperand
//
// DESCRIPTION
// See comments in Operand.hpp.
//
// AUTHOR INFORMATION
// Kevin R. Burger [KRB]
//
// Mailing Address:
// Computer Science & Engineering
// School of Computing, Informatics, and Decision Systems Engineering
// Arizona State University
// Tempe, AZ 85287-8809
//
// Email: burgerk@asu
// Web:	  http://kevin.floorsoup.com
//**************************************************************************************************************
#include "Operand.hpp"

//--------------------------------------------------------------------------------------------------------------
// Default ctor.
//--------------------------------------------------------------------------------------------------------------
cOperand::cOperand(string const& pString) :
	mString(pString)
{
}

//--------------------------------------------------------------------------------------------------------------
// Copy ctor.
//--------------------------------------------------------------------------------------------------------------
cOperand::cOperand(cOperand const& pOperand) :
	mString(pOperand.mString)
{
}

//--------------------------------------------------------------------------------------------------------------
// Dtor.
//--------------------------------------------------------------------------------------------------------------
cOperand::~cOperand()
{
}

//--------------------------------------------------------------------------------------------------------------
// Copy()
//
// DESCRIPTION:
// Makes this Operand a copy of pOperand.
//--------------------------------------------------------------------------------------------------------------
void cOperand::Copy(cOperand const& pOperand)
{
	mString = pOperand.mString;
}

//--------------------------------------------------------------------------------------------------------------
// operator=()
//--------------------------------------------------------------------------------------------------------------
cOperand& cOperand::operator=(cOperand const& pOperand)
{
	if (this != &pOperand) Copy(pOperand);
	return *this;
}
